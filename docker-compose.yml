services:
    postgres:
      build:
        context: .
        dockerfile: Dockerfile-pg
      restart: unless-stopped
      container_name: postgres
      hostname: postgres
      volumes:
        - ./data/pg_data/postgres:/var/lib/postgresql/data
        - ./initdb:/docker-entrypoint-initdb.d
      environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ports:
        - ${POSTGRES_PORT}:5432
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U superset -d superset"]
        interval: 15s
        timeout: 5s
        retries: 5
      networks:
        - trino-network

    minio:
      image: quay.io/minio/minio
      container_name: minio
      hostname: minio
      env_file:
        - .env
      ports:
        - 9000:9000
        - 9001:9001
      volumes:
        - ./data/minio_data:/minio_data
      command: server /minio_data --console-address ":9001"
      networks:
        - trino-network

    hive-metastore:
      image: starburstdata/hive:3.1.2-e.18
      container_name: hive-metastore
      hostname: hive-metastore
      depends_on:
        - postgres
      ports:
        - "9083:9083"
      environment:
        HIVE_METASTORE_DRIVER: org.postgresql.Driver 
        HIVE_METASTORE_JDBC_URL: jdbc:postgresql://postgres:5432/${HIVE_DATABASE}
        HIVE_METASTORE_USER: ${HIVE_USER}
        HIVE_METASTORE_PASSWORD: ${HIVE_PASSWORD}
        HIVE_METASTORE_WAREHOUSE_DIR: s3://hive/
        S3_ENDPOINT: http://minio:9000/
        S3_ACCESS_KEY: ${MINIO_ACCESS_KEY}
        S3_SECRET_KEY: ${MINIO_SECRET_KEY}
        S3_PATH_STYLE_ACCESS: "true"
        S3_ENDPOINT_SSL_ENABLED: "false"
        HIVE_METASTORE_USERS_IN_ADMIN_ROLE: "admin"
        REGION: ""
        GOOGLE_CLOUD_KEY_FILE_PATH: ""
        AZURE_ADL_CLIENT_ID: ""
        AZURE_ADL_CREDENTIAL: ""
        AZURE_ADL_REFRESH_URL: ""
        AZURE_ABFS_STORAGE_ACCOUNT: ""
        AZURE_ABFS_ACCESS_KEY: ""
        AZURE_WASB_STORAGE_ACCOUNT: ""
        AZURE_ABFS_OAUTH: ""
        AZURE_ABFS_OAUTH_TOKEN_PROVIDER: ""
        AZURE_ABFS_OAUTH_CLIENT_ID: ""
        AZURE_ABFS_OAUTH_SECRET: ""
        AZURE_ABFS_OAUTH_ENDPOINT: ""
        AZURE_WASB_ACCESS_KEY: ""
      networks:
        - trino-network        

    trino-coordinator:
      image: trinodb/trino:latest
      container_name: trino
      depends_on:
        - hive-metastore
      ports:
        - "18080:8080"
      volumes:
        - ./etc/trino/catalog:/etc/trino/catalog
      networks:
        - trino-network

    redis:
      image: redis:latest
      container_name: superset_redis
      restart: unless-stopped
      volumes:
        - ./data/redis_data:/data
      networks:
        - trino-network
        
    superset:
      image: apache/superset:2.1.0  # Фиксируем версию
      container_name: superset_app
      restart: unless-stopped
      ports:
        - "8088:8088"
      environment:
        - SUPERSET_SECRET_KEY=your-secret-key-here  # Замените на реальный ключ
        - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://superset:superset@postgres:5432/superset    
        - SUPERSET_DATABASE_URI=postgresql+psycopg2://superset:superset@postgres:5432/superset    
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - CELERY_BROKER_URL=redis://redis:6379/0
        - CELERY_RESULT_BACKEND=redis://redis:6379/0
        - SUPERSET_ENV=prod
        - PYTHONPATH=/app/pythonpath
        - SUPERSET_CONFIG_PATH=/app/pythonpath/superset_config.py
      volumes:
        - ./data/superset_data:/app/superset_home
        - ./etc/superset/superset_config.py:/app/pythonpath/superset_config.py
      depends_on:
        postgres:
          condition: service_healthy
        redis:
          condition: service_started
      networks:
        - trino-network
      # command: >
      #   superset db upgrade && 
      #   superset fab create-admin ... && 
      #   superset init && 
      #   /usr/bin/docker-entrypoint.sh"

    superset-worker:
      image: apache/superset:2.1.0
      container_name: superset_worker
      restart: unless-stopped
      environment:
        - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://superset:superset@postgres:5432/superset
        - SUPERSET_DATABASE_URI=postgresql+psycopg2://superset:superset@postgres:5432/superset
        - SUPERSET_SECRET_KEY=your-secret-key-here
        - CELERY_BROKER_URL=redis://redis:6379/0
        - CELERY_RESULT_BACKEND=redis://redis:6379/0
        - FLASK_ENV=production
        - CELERYD_LOG_LEVEL=INFO
        - C_FORCE_ROOT=true
        - BROKER_CONNECTION_RETRY_ON_STARTUP=true
        - PYTHONPATH=/app/pythonpath
        - SUPERSET_CONFIG_PATH=/app/pythonpath/superset_config.py        
      volumes:
        - ./data/superset_data:/app/superset_home
        - ./etc/superset/superset_config.py:/app/pythonpath/superset_config.py
      depends_on:
        - superset
      networks:
        - trino-network
      command: ["celery", "--app=superset.tasks.celery_app:app", "worker", "--pool=prefork", "-O", "fair", "-c", "4"]

networks:
  trino-network:
    driver: bridge